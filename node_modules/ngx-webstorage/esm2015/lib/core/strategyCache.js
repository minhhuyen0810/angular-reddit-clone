import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
let StrategyCacheService = class StrategyCacheService {
    constructor() {
        this.caches = {};
    }
    get(strategyName, key) {
        return this.getCacheStore(strategyName)[key];
    }
    set(strategyName, key, value) {
        this.getCacheStore(strategyName)[key] = value;
    }
    del(strategyName, key) {
        delete this.getCacheStore(strategyName)[key];
    }
    clear(strategyName) {
        this.caches[strategyName] = {};
    }
    getCacheStore(strategyName) {
        if (strategyName in this.caches)
            return this.caches[strategyName];
        return this.caches[strategyName] = {};
    }
};
StrategyCacheService.ɵfac = function StrategyCacheService_Factory(t) { return new (t || StrategyCacheService)(); };
StrategyCacheService.ɵprov = i0.ɵɵdefineInjectable({ factory: function StrategyCacheService_Factory() { return new StrategyCacheService(); }, token: StrategyCacheService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StrategyCacheService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
export { StrategyCacheService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyYXRlZ3lDYWNoZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC13ZWJzdG9yYWdlL2xpYi9jb3JlL3N0cmF0ZWd5Q2FjaGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekM7O0FBTUEsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7QUFDakMsSUFEQTtBQUFnQixRQUVMLFdBQU0sR0FBc0MsRUFBRSxDQUFDO0FBQzFELEtBcUJDO0FBQ0QsSUFyQkMsR0FBRyxDQUFDLFlBQW9CLEVBQUUsR0FBVztBQUN0QyxRQUFFLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMvQyxJQUFDLENBQUM7QUFDRixJQUNDLEdBQUcsQ0FBQyxZQUFvQixFQUFFLEdBQVcsRUFBRSxLQUFVO0FBQ2xELFFBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDaEQsSUFBQyxDQUFDO0FBQ0YsSUFDQyxHQUFHLENBQUMsWUFBb0IsRUFBRSxHQUFXO0FBQ3RDLFFBQUUsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQy9DLElBQUMsQ0FBQztBQUNGLElBQ0MsS0FBSyxDQUFDLFlBQW9CO0FBQzNCLFFBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFtQixDQUFDO0FBQ2xELElBQUMsQ0FBQztBQUNGLElBQ1csYUFBYSxDQUFDLFlBQW9CO0FBQUksUUFDL0MsSUFBSSxZQUFZLElBQUksSUFBSSxDQUFDLE1BQU07QUFBRSxZQUFBLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNwRSxRQUFFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFtQixDQUFDO0FBQ3pELElBQUMsQ0FBQztBQUNGLENBQUM7bUhBQUE7QUFDRDtBQXpCYSxvQkFBb0Isb0JBRGhDLFVBQVUsQ0FBQyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUMsQ0FBQyxJQUNwQjttQkFBb0IsQ0F3QmhDOztnREFDRDtBQUFDLFNBekJZLG9CQUFvQjtBQUVqQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RyYXRlZ3lDYWNoZSB7XG5cdFtrZXk6IHN0cmluZ106IGFueTtcbn1cblxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXG5leHBvcnQgY2xhc3MgU3RyYXRlZ3lDYWNoZVNlcnZpY2Uge1xuXG5cdHByb3RlY3RlZCBjYWNoZXM6IHsgW25hbWU6IHN0cmluZ106IFN0cmF0ZWd5Q2FjaGUgfSA9IHt9O1xuXG5cdGdldChzdHJhdGVneU5hbWU6IHN0cmluZywga2V5OiBzdHJpbmcpIHtcblx0XHRyZXR1cm4gdGhpcy5nZXRDYWNoZVN0b3JlKHN0cmF0ZWd5TmFtZSlba2V5XTtcblx0fVxuXG5cdHNldChzdHJhdGVneU5hbWU6IHN0cmluZywga2V5OiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcblx0XHR0aGlzLmdldENhY2hlU3RvcmUoc3RyYXRlZ3lOYW1lKVtrZXldID0gdmFsdWU7XG5cdH1cblxuXHRkZWwoc3RyYXRlZ3lOYW1lOiBzdHJpbmcsIGtleTogc3RyaW5nKSB7XG5cdFx0ZGVsZXRlIHRoaXMuZ2V0Q2FjaGVTdG9yZShzdHJhdGVneU5hbWUpW2tleV07XG5cdH1cblxuXHRjbGVhcihzdHJhdGVneU5hbWU6IHN0cmluZykge1xuXHRcdHRoaXMuY2FjaGVzW3N0cmF0ZWd5TmFtZV0gPSB7fSBhcyBTdHJhdGVneUNhY2hlO1xuXHR9XG5cblx0cHJvdGVjdGVkIGdldENhY2hlU3RvcmUoc3RyYXRlZ3lOYW1lOiBzdHJpbmcpOiBTdHJhdGVneUNhY2hlIHtcblx0XHRpZiAoc3RyYXRlZ3lOYW1lIGluIHRoaXMuY2FjaGVzKSByZXR1cm4gdGhpcy5jYWNoZXNbc3RyYXRlZ3lOYW1lXTtcblx0XHRyZXR1cm4gdGhpcy5jYWNoZXNbc3RyYXRlZ3lOYW1lXSA9IHt9IGFzIFN0cmF0ZWd5Q2FjaGU7XG5cdH1cbn1cbiJdfQ==