import { __decorate, __param } from "tslib";
import { Component, HostBinding, Input, Optional } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { counter } from '@fortawesome/fontawesome-svg-core';
import { faWarnIfParentNotExist } from '../shared/errors/warn-if-parent-not-exist';
import { FaLayersComponent } from './layers.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
let FaLayersCounterComponent = class FaLayersCounterComponent {
    constructor(parent, sanitizer) {
        this.parent = parent;
        this.sanitizer = sanitizer;
        this.classes = [];
        faWarnIfParentNotExist(this.parent, 'FaLayersComponent', this.constructor.name);
    }
    ngOnChanges(changes) {
        if (changes) {
            const params = this.buildParams();
            this.updateContent(params);
        }
    }
    buildParams() {
        return {
            title: this.title,
            classes: this.classes,
            styles: this.styles,
        };
    }
    updateContent(params) {
        this.renderedHTML = this.sanitizer.bypassSecurityTrustHtml(counter(this.content || '', params).html.join(''));
    }
};
FaLayersCounterComponent.ɵfac = function FaLayersCounterComponent_Factory(t) { return new (t || FaLayersCounterComponent)(ɵngcc0.ɵɵdirectiveInject(FaLayersComponent, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
FaLayersCounterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: FaLayersCounterComponent, selectors: [["fa-layers-counter"]], hostAttrs: [1, "ng-fa-layers-counter"], hostVars: 1, hostBindings: function FaLayersCounterComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("innerHTML", ctx.renderedHTML, ɵngcc0.ɵɵsanitizeHtml);
    } }, inputs: { classes: "classes", content: "content", title: "title", styles: "styles" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function FaLayersCounterComponent_Template(rf, ctx) { }, encapsulation: 2 });
FaLayersCounterComponent.ctorParameters = () => [
    { type: FaLayersComponent, decorators: [{ type: Optional }] },
    { type: DomSanitizer }
];
__decorate([
    Input()
], FaLayersCounterComponent.prototype, "content", void 0);
__decorate([
    Input()
], FaLayersCounterComponent.prototype, "title", void 0);
__decorate([
    Input()
], FaLayersCounterComponent.prototype, "styles", void 0);
__decorate([
    Input()
], FaLayersCounterComponent.prototype, "classes", void 0);
__decorate([
    HostBinding('innerHTML')
], FaLayersCounterComponent.prototype, "renderedHTML", void 0);
FaLayersCounterComponent = __decorate([ __param(0, Optional())
], FaLayersCounterComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FaLayersCounterComponent, [{
        type: Component,
        args: [{
                selector: 'fa-layers-counter',
                template: '',
                host: {
                    class: 'ng-fa-layers-counter'
                }
            }]
    }], function () { return [{ type: FaLayersComponent, decorators: [{
                type: Optional
            }] }, { type: ɵngcc1.DomSanitizer }]; }, { classes: [{
            type: Input
        }], renderedHTML: [{
            type: HostBinding,
            args: ['innerHTML']
        }], content: [{
            type: Input
        }], title: [{
            type: Input
        }], styles: [{
            type: Input
        }] }); })();
export { FaLayersCounterComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXJzLWNvdW50ZXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQGZvcnRhd2Vzb21lL2FuZ3VsYXItZm9udGF3ZXNvbWUvbGF5ZXJzL2xheWVycy1jb3VudGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFhLFFBQVEsRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDbEcsT0FBTyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNuRSxPQUFPLEVBQUUsT0FBTyxFQUF5QixNQUFNLG1DQUFtQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7QUFTdkQsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7QUFBRyxJQVF0QyxZQUFnQyxNQUF5QixFQUFVLFNBQXVCO0FBQzVGLFFBRGtDLFdBQU0sR0FBTixNQUFNLENBQW1CO0FBQUMsUUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFjO0FBQUMsUUFKbEYsWUFBTyxHQUFjLEVBQUUsQ0FBQztBQUNuQyxRQUlJLHNCQUFzQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwRixJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVcsQ0FBQyxPQUFzQjtBQUNwQyxRQUFJLElBQUksT0FBTyxFQUFFO0FBQ2pCLFlBQU0sTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3hDLFlBQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNqQyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsSUFDWSxXQUFXO0FBQUssUUFDeEIsT0FBTztBQUNYLFlBQU0sS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO0FBQ3ZCLFlBQU0sT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO0FBQzNCLFlBQU0sTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0FBQ3pCLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNILElBQ1UsYUFBYSxDQUFDLE1BQXFCO0FBQzdDLFFBQUksSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDbEgsSUFBRSxDQUFDO0FBQ0gsQ0FBQzs7OztrUEFBQTtBQUNEO0FBQWtELFlBdkJSLGlCQUFpQix1QkFBNUMsUUFBUTtBQUFPLFlBQWtELFlBQVk7QUFBRztBQVBwRjtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLHlEQUFnQjtBQUNoQjtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLHVEQUFlO0FBQ2Y7QUFBYSxJQUFyQixLQUFLLEVBQUU7QUFBQyx3REFBZ0I7QUFDaEI7QUFBYSxJQUFyQixLQUFLLEVBQUU7QUFBQyx5REFBd0I7QUFFUDtBQUFhLElBQXRDLFdBQVcsQ0FBQyxXQUFXLENBQUM7QUFBQyw4REFBdUI7QUFOdEMsd0JBQXdCLG9CQVBwQyxTQUFTLENBQUMsZkFPUCxDQVFXLFdBQUEsUUFBUSxFQUFFLENBQUE7Q0FkdkIsUUFBUSxFQUFFLFhBY2MsR0FSYix3QkFBd0IsQ0E4QnBDO0FBcEM4QixVQUM3QixRQUFRLEVBQUUsRUFBRSxVQUNaLElBQUksRUFBRSxjQUNKLEtBQUssRUFBRSxzQkFBc0I7U0FDOUIsTUFDRixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBZ0NGO0FBQUMsU0EvQlksd0JBQXdCO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25DaGFuZ2VzLCBPcHRpb25hbCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyLCBTYWZlSHRtbCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgY291bnRlciwgQ291bnRlclBhcmFtcywgU3R5bGVzIH0gZnJvbSAnQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlJztcbmltcG9ydCB7IGZhV2FybklmUGFyZW50Tm90RXhpc3QgfSBmcm9tICcuLi9zaGFyZWQvZXJyb3JzL3dhcm4taWYtcGFyZW50LW5vdC1leGlzdCc7XG5pbXBvcnQgeyBGYUxheWVyc0NvbXBvbmVudCB9IGZyb20gJy4vbGF5ZXJzLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2ZhLWxheWVycy1jb3VudGVyJyxcbiAgdGVtcGxhdGU6ICcnLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICduZy1mYS1sYXllcnMtY291bnRlcicsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIEZhTGF5ZXJzQ291bnRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGNvbnRlbnQ6IHN0cmluZztcbiAgQElucHV0KCkgdGl0bGU/OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHN0eWxlcz86IFN0eWxlcztcbiAgQElucHV0KCkgY2xhc3Nlcz86IHN0cmluZ1tdID0gW107XG5cbiAgQEhvc3RCaW5kaW5nKCdpbm5lckhUTUwnKSByZW5kZXJlZEhUTUw6IFNhZmVIdG1sO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHByaXZhdGUgcGFyZW50OiBGYUxheWVyc0NvbXBvbmVudCwgcHJpdmF0ZSBzYW5pdGl6ZXI6IERvbVNhbml0aXplcikge1xuICAgIGZhV2FybklmUGFyZW50Tm90RXhpc3QodGhpcy5wYXJlbnQsICdGYUxheWVyc0NvbXBvbmVudCcsIHRoaXMuY29uc3RydWN0b3IubmFtZSk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYgKGNoYW5nZXMpIHtcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuYnVpbGRQYXJhbXMoKTtcbiAgICAgIHRoaXMudXBkYXRlQ29udGVudChwYXJhbXMpO1xuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCBidWlsZFBhcmFtcygpOiBDb3VudGVyUGFyYW1zIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBjbGFzc2VzOiB0aGlzLmNsYXNzZXMsXG4gICAgICBzdHlsZXM6IHRoaXMuc3R5bGVzLFxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZUNvbnRlbnQocGFyYW1zOiBDb3VudGVyUGFyYW1zKSB7XG4gICAgdGhpcy5yZW5kZXJlZEhUTUwgPSB0aGlzLnNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0SHRtbChjb3VudGVyKHRoaXMuY29udGVudCB8fCAnJywgcGFyYW1zKS5odG1sLmpvaW4oJycpKTtcbiAgfVxufVxuIl19